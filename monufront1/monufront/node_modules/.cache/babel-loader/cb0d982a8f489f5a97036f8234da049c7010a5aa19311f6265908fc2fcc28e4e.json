{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohan\\\\OneDrive\\\\Documents\\\\Hackathon_Project\\\\monufront1\\\\monufront\\\\src\\\\components\\\\Feedback.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './css/Feedback.css';\nimport NavBar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Feedback = () => {\n  _s();\n  const [feedbackData, setFeedbackData] = useState([]);\n  const [visibleComments, setVisibleComments] = useState([]);\n  const [loadCount, setLoadCount] = useState(3); // Number of feedbacks to load initially\n  const [currentPage, setCurrentPage] = useState(1); // Current page\n  const [totalFeedbacks, setTotalFeedbacks] = useState(0); // Total number of feedbacks\n  const [hasMore, setHasMore] = useState(true); // Flag to check if there are more feedbacks\n\n  // Function to fetch feedback data from API\n  const fetchFeedbackData = async () => {\n    const limit = loadCount; // Number of feedbacks per page\n    const page = currentPage; // Current page\n\n    try {\n      const response = await axios.get(`${process.env.REACT_APP_BACK_URL}/api/agency/show-review?limit=${limit}&page=${page}`, {\n        withCredentials: true\n      });\n\n      // If the current page is 1, reset the feedback data; otherwise, append the new feedbacks\n      setFeedbackData(prevData => page === 1 ? response.data.reviews : [...prevData, ...response.data.reviews]);\n      setTotalFeedbacks(response.data.total); // Total feedbacks count from response\n      setVisibleComments(prev => [...prev, ...Array(response.data.reviews.length).fill(false)]); // Initialize visibility state\n      setHasMore(page * limit < response.data.total); // Check if there are more feedbacks\n    } catch (error) {\n      console.error('Error fetching feedback data:', error);\n    }\n  };\n\n  // Load more feedbacks\n  const loadMoreFeedbacks = () => {\n    setCurrentPage(prevPage => prevPage + 1); // Go to the next page\n  };\n\n  // Toggle function to show/hide the full comment\n  const toggleComment = index => {\n    const updatedVisibility = [...visibleComments];\n    updatedVisibility[index] = !updatedVisibility[index];\n    setVisibleComments(updatedVisibility);\n  };\n  useEffect(() => {\n    fetchFeedbackData(); // Fetch feedback data when component mounts or page changes\n  }, [currentPage]); // Remove loadCount from dependencies\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedback-list\",\n      children: [feedbackData.map((feedback, index) => {\n        const {\n          userName,\n          rating,\n          comment,\n          createdAt\n        } = feedback;\n        const showFullComment = visibleComments[index];\n        const commentToDisplay = showFullComment ? comment : `${comment.slice(0, 100)}...`;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card1-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: `Rating: ${rating} ⭐`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card1-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"card1-text\",\n              children: commentToDisplay\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-link\",\n              onClick: () => toggleComment(index),\n              children: showFullComment ? 'Show Less' : 'Show More'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-muted\",\n              children: [\"Created At: \", new Date(createdAt).toLocaleDateString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this);\n      }), hasMore && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: loadMoreFeedbacks,\n        children: \"Load More\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Feedback, \"pHMwrUVlWn8aVvK/W5QjRZpjK98=\");\n_c = Feedback;\nexport default Feedback;\nvar _c;\n$RefreshReg$(_c, \"Feedback\");","map":{"version":3,"names":["React","useState","useEffect","axios","NavBar","jsxDEV","_jsxDEV","Feedback","_s","feedbackData","setFeedbackData","visibleComments","setVisibleComments","loadCount","setLoadCount","currentPage","setCurrentPage","totalFeedbacks","setTotalFeedbacks","hasMore","setHasMore","fetchFeedbackData","limit","page","response","get","process","env","REACT_APP_BACK_URL","withCredentials","prevData","data","reviews","total","prev","Array","length","fill","error","console","loadMoreFeedbacks","prevPage","toggleComment","index","updatedVisibility","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","feedback","userName","rating","comment","createdAt","showFullComment","commentToDisplay","slice","onClick","Date","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/mohan/OneDrive/Documents/Hackathon_Project/monufront1/monufront/src/components/Feedback.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './css/Feedback.css';\r\nimport NavBar from './Navbar';\r\n\r\nconst Feedback = () => {\r\n  const [feedbackData, setFeedbackData] = useState([]);\r\n  const [visibleComments, setVisibleComments] = useState([]);\r\n  const [loadCount, setLoadCount] = useState(3); // Number of feedbacks to load initially\r\n  const [currentPage, setCurrentPage] = useState(1); // Current page\r\n  const [totalFeedbacks, setTotalFeedbacks] = useState(0); // Total number of feedbacks\r\n  const [hasMore, setHasMore] = useState(true); // Flag to check if there are more feedbacks\r\n\r\n  // Function to fetch feedback data from API\r\n  const fetchFeedbackData = async () => {\r\n    const limit = loadCount; // Number of feedbacks per page\r\n    const page = currentPage; // Current page\r\n\r\n    try {\r\n      const response = await axios.get(`${process.env.REACT_APP_BACK_URL}/api/agency/show-review?limit=${limit}&page=${page}`, { withCredentials: true });\r\n      \r\n      // If the current page is 1, reset the feedback data; otherwise, append the new feedbacks\r\n      setFeedbackData((prevData) => (page === 1 ? response.data.reviews : [...prevData, ...response.data.reviews]));\r\n      \r\n      setTotalFeedbacks(response.data.total); // Total feedbacks count from response\r\n      setVisibleComments((prev) => [...prev, ...Array(response.data.reviews.length).fill(false)]); // Initialize visibility state\r\n      setHasMore((page * limit) < response.data.total); // Check if there are more feedbacks\r\n    } catch (error) {\r\n      console.error('Error fetching feedback data:', error);\r\n    }\r\n  };\r\n\r\n  // Load more feedbacks\r\n  const loadMoreFeedbacks = () => {\r\n    setCurrentPage((prevPage) => prevPage + 1); // Go to the next page\r\n  };\r\n\r\n  // Toggle function to show/hide the full comment\r\n  const toggleComment = (index) => {\r\n    const updatedVisibility = [...visibleComments];\r\n    updatedVisibility[index] = !updatedVisibility[index];\r\n    setVisibleComments(updatedVisibility);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchFeedbackData(); // Fetch feedback data when component mounts or page changes\r\n  }, [currentPage]); // Remove loadCount from dependencies\r\n\r\n  return (\r\n    <div>\r\n          <NavBar/>\r\n    <div className=\"feedback-list\">\r\n      {feedbackData.map((feedback, index) => {\r\n        const { userName, rating, comment, createdAt } = feedback;\r\n        const showFullComment = visibleComments[index];\r\n        const commentToDisplay = showFullComment ? comment : `${comment.slice(0, 100)}...`;\r\n\r\n        return (\r\n         \r\n          <div className=\"card1\" key={index}>\r\n            <div className=\"card1-header\">\r\n              <h5>{userName}</h5>\r\n              <span>{`Rating: ${rating} ⭐`}</span>\r\n            </div>\r\n            <div className=\"card1-body\">\r\n              <p className=\"card1-text\">{commentToDisplay}</p>\r\n              <button className=\"btn btn-link\" onClick={() => toggleComment(index)}>\r\n                {showFullComment ? 'Show Less' : 'Show More'}\r\n              </button>\r\n              <p className=\"text-muted\">Created At: {new Date(createdAt).toLocaleDateString()}</p>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n      {hasMore && (\r\n        <button className=\"btn btn-primary\" onClick={loadMoreFeedbacks}>\r\n          Load More\r\n        </button>\r\n      )}\r\n    </div>\r\n    </div>\r\n  );\r\n  \r\n};\r\n\r\nexport default Feedback;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}